                        ; BOX.TMP                        ; 8-BIT SHOW AND TELL "ÒOBIN"                        ; HTTP://YOUTUBE.COM                        ;   /WATCH?V=ZWÔÁ7XIÑÄ               ;---------------------------------------                        ; BASIC LINE:  100 ÓÙÓ 2064                        *= 2049      ; $08010801 0B 08     LINE1    .WORD LINE2  ; LINK0803 64 00              .WORD 100    ; 1000805 9E                 .BYTE $9E    ; ÓÙÓ0806 32 31 30 30                        .TEXT "2100" ; 2100080A 00                 .BYTE $00    ; EOL080B 29 08     LINE2    .WORD LINE3  ; LINK080D 6E 00              .WORD 110    ; 110080F 8F                 .BYTE $8F    ; ÒÅÍ0810 20 4D 43 20 50 45 4E 4E 49 4E 47 53 2C 20                        .TEXT " MC PENNINGS, "081E 32 30 32 35 20 30 33 20 30 31                        .TEXT "2025 03 01"0828 00                 .BYTE $00    ; EOL0829 00 00     LINE3    .WORD $00    ; LINK (EOF)                        *= 21000834 4C 48 08           JMP SETUP    ; SKIP VARS               ;---------------------------------------                        ; CONSTANTS               SP0SLOT  = $07F8   ; =2040               SP1SLOT  = $07F9   ; =2041               SP0X     = $D000               SP0Y     = $D001               SP1X     = $D002               SP1Y     = $D003               SP9X     = $D010   ; SP9=BIT VECTOR               SCANLN   = $D012               SP9EN    = $D015               SP9YEX   = $D017               SP9XEX   = $D01D               SP0COL   = $D027               SP1COL   = $D028               SLOTA    = 13*64   ; =832=$340               SLOTB    = 14*64   ; =896=$280               BORDER   = $D020               COLNORM  = 14      ; LIGHT BLUE               COLHIT   = 1       ; WHITE               BXMIN    = 24      ; BOX X MIN               BXMAX    = 296     ; BOX X MAX 2-BYTE!               BYMIN    = 50      ; BOX Y MIN               BYMAX    = 208     ; BOX Y MAX               DXMIN    = 1       ; DOT X MIN               DXMAX    = 22      ; DOT X MAX               DYMIN    = 1       ; DOT Y MIN               DYMAX    = 19      ; DOT Y MAX               CHROUT   = $FFD2   ; KERNAL PRINT               SCNKEY   = $FF9F   ; KERNAL KBD SCAN               GETIN    = $FFE4   ; KERNAL READ KBD               BWAIT    = 1       ; BOX WAIT FRAMES               DWAIT    = 5       ; DOT WAIT FRAMES               HITTIME  = 8  ; >1 ; FRAMES FOR HIT COL               ;---------------------------------------                        ; VARIABLES (WITH INITIAL VAL)0837 64 00     BXP      .WORD 100 ; BOX X-POS (16BIT)0839 00        BXD      .BYTE 0   ; BOX X-DIR (EVEN=+)083A 50        BYP      .BYTE 80  ; BOX Y-POS083B 00        BYD      .BYTE 0   ; BOX Y-DIR (EVEN=+)083C 0A        DXP      .BYTE 10  ; DOT X-POS083D 00        DXD      .BYTE 0   ; DOT X-DIR (EVEN=+)083E 0F        DYP      .BYTE 15  ; DOT Y-POS083F 00        DYD      .BYTE 0   ; DOT Y-DIR (EVEN=+)0840 00        DA0      .BYTE 0   ; DOT ADDR0 (SPRITE)0841 00        DM0      .BYTE 0   ; DOT MASK0 (SPRITE)0842 00        DA1      .BYTE 0   ; DOT ADDR1 (SPRITE)0843 00        DM1      .BYTE 0   ; DOT MASK1 (SPRITE)0844 01        BTIME    .BYTE BWAIT; FRAME COUNTER BOX0845 05        DTIME    .BYTE DWAIT; FRAME COUNTER DOT0846 00        BHIT     .BYTE 0   ; HIT COUNTER BOX0847 00        DHIT     .BYTE 0   ; HIT COUNTER DOT               ;---------------------------------------                        ; MAIN SETUP               SETUP0848 20 00 0A           JSR FILSLOTA084B 20 2B 0A           JSR FILSLOTB084E 20 36 0A           JSR SP0SP10851 20 F5 09           JSR INITSCRN0854 20 89 09           JSR DRAWFRM               ;---------------------------------------                        ; MAIN LOOP               LOOP                        ; MOVE BOX IF BTIME EXPIRED0857 CE 44 08           DEC BTIME085A D0 0B              BNE LOOP1085C A9 01              LDA #BWAIT  ; RELOAD BTIME085E 8D 44 08           STA BTIME0861 20 92 08           JSR BOXMOVX ; MOVE BOX0864 20 DA 08           JSR BOXMOVY               LOOP1                        ; MOVE DOT IF DTIME EXPIRED0867 CE 45 08           DEC DTIME086A D0 0E              BNE LOOP2086C A9 05              LDA #DWAIT  ; RELOAD DTIME086E 8D 45 08           STA DTIME0871 20 07 09           JSR DOTMOVX ; MOVE DOT0874 20 34 09           JSR DOTMOVY0877 20 61 09           JSR DOTMOVAM               LOOP2                        ; DRAW THE NEW FRAME087A 20 89 09           JSR DRAWFRM                        ; CHECK IF SPC KEY PRESSED087D 20 9F FF           JSR SCNKEY0880 20 E4 FF           JSR GETIN0883 C9 20              CMP #$200885 D0 D0              BNE LOOP                        ; HIDE BOX AND DOT0887 A9 00              LDA #00889 8D 15 D0           STA SP9EN                        ; BORDER COLOR088C A9 0E              LDA #COLNORM088E 8D 20 D0           STA BORDER                        ; END0891 60                 RTS               ;---------------------------------------                        ; BOX MOVE X POSITION               BOXMOVX  ; CHECK DIRECTION BIT0892 AD 39 08           LDA BXD0895 29 01              AND #$010897 D0 1C              BNE BOXDECX               BOXINCX  ; 16 BIT INC0899 EE 37 08           INC BXP+0089C D0 03              BNE BOXINCX1089E EE 38 08           INC BXP+1               BOXINCX1 ; 16 BIT CMP WITH XMAX08A1 A9 01              LDA #>(BXMAX+1)08A3 CD 38 08           CMP BXP+108A6 D0 31              BNE BOXMOVX108A8 A9 29              LDA #<(BXMAX+1)08AA CD 37 08           CMP BXP+008AD D0 2A              BNE BOXMOVX1                        ; UNDO INC08AF CE 37 08           DEC BXP+0 ;NO NEED TO DEC MSB08B2 4C D1 08           JMP BOXFLIPX               BOXDECX  ; 16 BIT DEC08B5 AD 37 08           LDA BXP+008B8 D0 03              BNE BOXDECX108BA CE 38 08           DEC BXP+108BD CE 37 08  BOXDECX1 DEC BXP+0                        ; 16 BIT CMP WITH XMIN08C0 A9 00              LDA #>(BXMIN-1)08C2 CD 38 08           CMP BXP+108C5 D0 12              BNE BOXMOVX108C7 A9 17              LDA #<(BXMIN-1)08C9 CD 37 08           CMP BXP+008CC D0 0B              BNE BOXMOVX1                        ; UNDO DEC08CE EE 37 08           INC BXP+0 ;NO NEED TO INC MSB               BOXFLIPX ; FLIP DIRECTION08D1 EE 39 08           INC BXD08D4 A9 08              LDA #HITTIME08D6 8D 46 08           STA BHIT               BOXMOVX108D9 60                 RTS               ;---------------------------------------                        ; BOX MOVE Y POSITION               BOXMOVY  ; CHECK DIRECTION BIT08DA AD 3B 08           LDA BYD08DD 29 01              AND #$0108DF D0 10              BNE BOXDECY               BOXINCY08E1 EE 3A 08           INC BYP08E4 A9 D1              LDA #(BYMAX+1)08E6 CD 3A 08           CMP BYP08E9 D0 1B              BNE BOXMOVY1                        ; UNDO INC08EB CE 3A 08           DEC BYP08EE 4C FE 08           JMP BOXFLIPY               BOXDECY08F1 CE 3A 08           DEC BYP08F4 A9 31              LDA #(BYMIN-1)08F6 CD 3A 08           CMP BYP08F9 D0 0B              BNE BOXMOVY1                        ; UNDO DEC08FB EE 3A 08           INC BYP               BOXFLIPY ; FLIP DIRECTION08FE EE 3B 08           INC BYD0901 A9 08              LDA #HITTIME0903 8D 46 08           STA BHIT               BOXMOVY10906 60                 RTS               ;---------------------------------------                        ; DOT MOVE X POSITION               DOTMOVX  ; CHECK DIRECTION BIT0907 AD 3D 08           LDA DXD090A 29 01              AND #$01090C D0 10              BNE DOTDECX               DOTINCX090E EE 3C 08           INC DXP0911 A9 17              LDA #(DXMAX+1)0913 CD 3C 08           CMP DXP0916 D0 1B              BNE DOTMOVX1                        ; UNDO INC0918 CE 3C 08           DEC DXP091B 4C 2B 09           JMP DOTFLIPX               DOTDECX091E CE 3C 08           DEC DXP0921 A9 00              LDA #(DXMIN-1)0923 CD 3C 08           CMP DXP0926 D0 0B              BNE DOTMOVX1                        ; UNDO DEC0928 EE 3C 08           INC DXP               DOTFLIPX ; FLIP DIRECTION092B EE 3D 08           INC DXD092E A9 08              LDA #HITTIME0930 8D 47 08           STA DHIT               DOTMOVX10933 60                 RTS               ;---------------------------------------                        ; DOT MOVE Y POSITION               DOTMOVY  ; CHECK DIRECTION BIT0934 AD 3F 08           LDA DYD0937 29 01              AND #$010939 D0 10              BNE DOTDECY               DOTINCY093B EE 3E 08           INC DYP093E A9 14              LDA #(DYMAX+1)0940 CD 3E 08           CMP DYP0943 D0 1B              BNE DOTMOVY1                        ; UNDO INC0945 CE 3E 08           DEC DYP0948 4C 58 09           JMP DOTFLIPY               DOTDECY094B CE 3E 08           DEC DYP094E A9 00              LDA #(DYMIN-1)0950 CD 3E 08           CMP DYP0953 D0 0B              BNE DOTMOVY1                        ; UNDO DEC0955 EE 3E 08           INC DYP               DOTFLIPY ; FLIP DIRECTION0958 EE 3F 08           INC DYD095B A9 08              LDA #HITTIME095D 8D 47 08           STA DHIT               DOTMOVY10960 60                 RTS               ;---------------------------------------                        ; DOT MOVE ADDRESS & MASK               DOTMOVAM ; ADDR= Y*3 + X//80961 AD 3C 08           LDA DXP0964 4A                 LSR A0965 4A                 LSR A0966 4A                 LSR A0967 18                 CLC0968 6D 3E 08           ADC DYP096B 6D 3E 08           ADC DYP096E 6D 3E 08           ADC DYP0971 8D 42 08           STA DA1  ; NEW DOT ADDRESS                        ; MASK= 1 << (8-X%8)0974 AD 3C 08           LDA DXP0977 29 07              AND #$070979 AA                 TAX097A BD 81 09           LDA LUT,X097D 8D 43 08           STA DM1  ; MASK AT NEW ADDRESS0980 60                 RTS0981 80 40 20 10               LUT      .BYTE $80,$40,$20,$100985 08 04 02 01                        .BYTE $08,$04,$02,$01               ;---------------------------------------                        ; DRAW NEXT FRAME               DRAWFRM                        ; WAIT TILL SCANLINE AT BORDER0989 A9 FF              LDA #255098B CD 12 D0           CMP SCANLN098E D0 FB              BNE *-3                        ; ERASE DOT OLD POS0990 AE 40 08           LDX DA00993 BD 80 03           LDA SLOTB,X0996 4D 41 08           EOR DM00999 9D 80 03           STA SLOTB,X                        ; SPRITES XPOS LSB099C AD 37 08           LDA BXP+0099F 8D 00 D0           STA SP0X09A2 8D 02 D0           STA SP1X                        ; SPRITES XPOS MSB09A5 AD 38 08           LDA BXP+109A8 F0 02              BEQ *+409AA A9 03              LDA #309AC 8D 10 D0           STA SP9X                        ; SPRITES YPOS09AF AD 3A 08           LDA BYP09B2 8D 01 D0           STA SP0Y09B5 8D 03 D0           STA SP1Y                        ; DRAW DOT NEW POS09B8 AE 42 08           LDX DA109BB BD 80 03           LDA SLOTB,X09BE 4D 43 08           EOR DM109C1 9D 80 03           STA SLOTB,X                        ; RECORD NEW DOT POS09C4 AD 42 08           LDA DA109C7 8D 40 08           STA DA009CA AD 43 08           LDA DM109CD 8D 41 08           STA DM0                        ; BOX HIT09D0 A9 0E              LDA #COLNORM09D2 AE 46 08           LDX BHIT09D5 F0 0B              BEQ DRAWFRM109D7 CA                 DEX09D8 8E 46 08           STX BHIT09DB F0 02              BEQ *+4 ; SKIP NEXT09DD A9 01              LDA #COLHIT09DF 8D 20 D0           STA BORDER               DRAWFRM1                        ; DOT HIT09E2 A9 0E              LDA #COLNORM09E4 AE 47 08           LDX DHIT09E7 F0 0B              BEQ DRAWFRM209E9 CA                 DEX09EA 8E 47 08           STX DHIT09ED F0 02              BEQ *+4 ; SKIP NEXT09EF A9 01              LDA #COLHIT09F1 8D 27 D0           STA SP0COL               DRAWFRM209F4 60                 RTS               ;---------------------------------------                        ; INIT SCREEN               INITSCRN09F5 A9 0E              LDA #COLNORM09F7 8D 20 D0           STA BORDER09FA A9 93              LDA #$93 ; ÃÌÒ/ÈÏÍÅ CHAR09FC 20 D2 FF           JSR CHROUT09FF 60                 RTS               ;---------------------------------------                        ; FILL SLOT Á WITH "BOX"               FILSLOTA0A00 A9 FF              LDA #$FF0A02 8D 40 03           STA SLOTA+00A05 8D 41 03           STA SLOTA+10A08 8D 42 03           STA SLOTA+20A0B 8D 7C 03           STA SLOTA+(20*3)+00A0E 8D 7D 03           STA SLOTA+(20*3)+10A11 8D 7E 03           STA SLOTA+(20*3)+20A14 A2 39              LDX #(3*21)-3-30A16 A9 80     DRAW     LDA #$800A18 9D 40 03           STA SLOTA+0,X0A1B A9 00              LDA #$000A1D 9D 41 03           STA SLOTA+1,X0A20 A9 01              LDA #$010A22 9D 42 03           STA SLOTA+2,X0A25 CA                 DEX0A26 CA                 DEX0A27 CA                 DEX0A28 D0 EC              BNE DRAW0A2A 60                 RTS               ;---------------------------------------                        ; FILL SLOT Â WITH "VOID"               FILSLOTB0A2B A9 00              LDA #00A2D A2 3F              LDX #3*21               FILSLOTB10A2F 9D 80 03           STA SLOTB,X0A32 CA                 DEX0A33 D0 FA              BNE FILSLOTB10A35 60                 RTS               ;---------------------------------------                        ; SETUP SPRITES               SP0SP10A36 A9 0D              LDA #SLOTA/640A38 8D F8 07           STA SP0SLOT0A3B A9 0E              LDA #SLOTB/640A3D 8D F9 07           STA SP1SLOT0A40 A9 0E              LDA #COLNORM0A42 8D 27 D0           STA SP0COL0A45 8D 28 D0           STA SP1COL0A48 A9 03              LDA #30A4A 8D 1D D0           STA SP9XEX   ; EXPAND X0A4D 8D 17 D0           STA SP9YEX   ; EXPAND Y0A50 8D 15 D0           STA SP9EN    ; ENABLE0A53 60                 RTS                        ; END OF PROGRAM               ;---------------------------------------