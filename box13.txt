         ; BOX.TMP         ; 8-BIT SHOW AND TELL "ÒOBIN"         ; HTTP://YOUTUBE.COM         ;   /WATCH?V=ZWÔÁ7XIÑÄ;---------------------------------------         ; BASIC LINE:  100 ÓÙÓ 2064         *= 2049      ; $0801LINE1    .WORD LINE2  ; LINK         .WORD 100    ; 100         .BYTE $9E    ; ÓÙÓ         .TEXT "2100" ; 2100         .BYTE $00    ; EOLLINE2    .WORD LINE3  ; LINK         .WORD 110    ; 110         .BYTE $8F    ; ÒÅÍ         .TEXT " MC PENNINGS, "         .TEXT "2025 03 01"         .BYTE $00    ; EOLLINE3    .WORD $00    ; LINK (EOF)         *= 2100         JMP SETUP    ; SKIP VARS;---------------------------------------         ; CONSTANTSSP0SLOT  = $07F8   ; =2040SP1SLOT  = $07F9   ; =2041SP0X     = $D000SP0Y     = $D001SP1X     = $D002SP1Y     = $D003SP9X     = $D010   ; SP9=BIT VECTORSCANLN   = $D012SP9EN    = $D015SP9YEX   = $D017SP9XEX   = $D01DSP0COL   = $D027SP1COL   = $D028SLOTA    = 13*64   ; =832=$340SLOTB    = 14*64   ; =896=$280BORDER   = $D020COLNORM  = 14      ; LIGHT BLUECOLHIT   = 1       ; WHITEBXMIN    = 24      ; BOX X MINBXMAX    = 296     ; BOX X MAX 2-BYTE!BYMIN    = 50      ; BOX Y MINBYMAX    = 208     ; BOX Y MAXDXMIN    = 1       ; DOT X MINDXMAX    = 22      ; DOT X MAXDYMIN    = 1       ; DOT Y MINDYMAX    = 19      ; DOT Y MAXCHROUT   = $FFD2   ; KERNAL PRINTSCNKEY   = $FF9F   ; KERNAL KBD SCANGETIN    = $FFE4   ; KERNAL READ KBDBWAIT    = 1       ; BOX WAIT FRAMESDWAIT    = 5       ; DOT WAIT FRAMESHITTIME  = 8  ; >1 ; FRAMES FOR HIT COL;---------------------------------------         ; VARIABLES (WITH INITIAL VAL)BXP      .WORD 100 ; BOX X-POS (16BIT)BXD      .BYTE 0   ; BOX X-DIR (EVEN=+)BYP      .BYTE 80  ; BOX Y-POSBYD      .BYTE 0   ; BOX Y-DIR (EVEN=+)DXP      .BYTE 10  ; DOT X-POSDXD      .BYTE 0   ; DOT X-DIR (EVEN=+)DYP      .BYTE 15  ; DOT Y-POSDYD      .BYTE 0   ; DOT Y-DIR (EVEN=+)DA0      .BYTE 0   ; DOT ADDR0 (SPRITE)DM0      .BYTE 0   ; DOT MASK0 (SPRITE)DA1      .BYTE 0   ; DOT ADDR1 (SPRITE)DM1      .BYTE 0   ; DOT MASK1 (SPRITE)BTIME    .BYTE BWAIT; FRAME COUNTER BOXDTIME    .BYTE DWAIT; FRAME COUNTER DOTBHIT     .BYTE 0   ; HIT COUNTER BOXDHIT     .BYTE 0   ; HIT COUNTER DOT;---------------------------------------         ; MAIN SETUPSETUP         JSR FILSLOTA         JSR FILSLOTB         JSR SP0SP1         JSR INITSCRN         JSR DRAWFRM;---------------------------------------         ; MAIN LOOPLOOP         ; MOVE BOX IF BTIME EXPIRED         DEC BTIME         BNE LOOP1         LDA #BWAIT  ; RELOAD BTIME         STA BTIME         JSR BOXMOVX ; MOVE BOX         JSR BOXMOVYLOOP1         ; MOVE DOT IF DTIME EXPIRED         DEC DTIME         BNE LOOP2         LDA #DWAIT  ; RELOAD DTIME         STA DTIME         JSR DOTMOVX ; MOVE DOT         JSR DOTMOVY         JSR DOTMOVAMLOOP2         ; DRAW THE NEW FRAME         JSR DRAWFRM         ; CHECK IF SPC KEY PRESSED         JSR SCNKEY         JSR GETIN         CMP #$20         BNE LOOP         ; HIDE BOX AND DOT         LDA #0         STA SP9EN         ; BORDER COLOR         LDA #COLNORM         STA BORDER         ; END         RTS;---------------------------------------         ; BOX MOVE X POSITIONBOXMOVX  ; CHECK DIRECTION BIT         LDA BXD         AND #$01         BNE BOXDECXBOXINCX  ; 16 BIT INC         INC BXP+0         BNE BOXINCX1         INC BXP+1BOXINCX1 ; 16 BIT CMP WITH XMAX         LDA #>(BXMAX+1)         CMP BXP+1         BNE BOXMOVX1         LDA #<(BXMAX+1)         CMP BXP+0         BNE BOXMOVX1         ; UNDO INC         DEC BXP+0 ;NO NEED TO DEC MSB         JMP BOXFLIPXBOXDECX  ; 16 BIT DEC         LDA BXP+0         BNE BOXDECX1         DEC BXP+1BOXDECX1 DEC BXP+0         ; 16 BIT CMP WITH XMIN         LDA #>(BXMIN-1)         CMP BXP+1         BNE BOXMOVX1         LDA #<(BXMIN-1)         CMP BXP+0         BNE BOXMOVX1         ; UNDO DEC         INC BXP+0 ;NO NEED TO INC MSBBOXFLIPX ; FLIP DIRECTION         INC BXD         LDA #HITTIME         STA BHITBOXMOVX1         RTS;---------------------------------------         ; BOX MOVE Y POSITIONBOXMOVY  ; CHECK DIRECTION BIT         LDA BYD         AND #$01         BNE BOXDECYBOXINCY         INC BYP         LDA #(BYMAX+1)         CMP BYP         BNE BOXMOVY1         ; UNDO INC         DEC BYP         JMP BOXFLIPYBOXDECY         DEC BYP         LDA #(BYMIN-1)         CMP BYP         BNE BOXMOVY1         ; UNDO DEC         INC BYPBOXFLIPY ; FLIP DIRECTION         INC BYD         LDA #HITTIME         STA BHITBOXMOVY1         RTS;---------------------------------------         ; DOT MOVE X POSITIONDOTMOVX  ; CHECK DIRECTION BIT         LDA DXD         AND #$01         BNE DOTDECXDOTINCX         INC DXP         LDA #(DXMAX+1)         CMP DXP         BNE DOTMOVX1         ; UNDO INC         DEC DXP         JMP DOTFLIPXDOTDECX         DEC DXP         LDA #(DXMIN-1)         CMP DXP         BNE DOTMOVX1         ; UNDO DEC         INC DXPDOTFLIPX ; FLIP DIRECTION         INC DXD         LDA #HITTIME         STA DHITDOTMOVX1         RTS;---------------------------------------         ; DOT MOVE Y POSITIONDOTMOVY  ; CHECK DIRECTION BIT         LDA DYD         AND #$01         BNE DOTDECYDOTINCY         INC DYP         LDA #(DYMAX+1)         CMP DYP         BNE DOTMOVY1         ; UNDO INC         DEC DYP         JMP DOTFLIPYDOTDECY         DEC DYP         LDA #(DYMIN-1)         CMP DYP         BNE DOTMOVY1         ; UNDO DEC         INC DYPDOTFLIPY ; FLIP DIRECTION         INC DYD         LDA #HITTIME         STA DHITDOTMOVY1         RTS;---------------------------------------         ; DOT MOVE ADDRESS & MASKDOTMOVAM ; ADDR= Y*3 + X//8         LDA DXP         LSR A         LSR A         LSR A         CLC         ADC DYP         ADC DYP         ADC DYP         STA DA1  ; NEW DOT ADDRESS         ; MASK= 1 << (8-X%8)         LDA DXP         AND #$07         TAX         LDA LUT,X         STA DM1  ; MASK AT NEW ADDRESS         RTSLUT      .BYTE $80,$40,$20,$10         .BYTE $08,$04,$02,$01;---------------------------------------         ; DRAW NEXT FRAMEDRAWFRM         ; WAIT TILL SCANLINE AT BORDER         LDA #255         CMP SCANLN         BNE *-3         ; ERASE DOT OLD POS         LDX DA0         LDA SLOTB,X         EOR DM0         STA SLOTB,X         ; SPRITES XPOS LSB         LDA BXP+0         STA SP0X         STA SP1X         ; SPRITES XPOS MSB         LDA BXP+1         BEQ *+4         LDA #3         STA SP9X         ; SPRITES YPOS         LDA BYP         STA SP0Y         STA SP1Y         ; DRAW DOT NEW POS         LDX DA1         LDA SLOTB,X         EOR DM1         STA SLOTB,X         ; RECORD NEW DOT POS         LDA DA1         STA DA0         LDA DM1         STA DM0         ; BOX HIT         LDA #COLNORM         LDX BHIT         BEQ DRAWFRM1         DEX         STX BHIT         BEQ *+4 ; SKIP NEXT         LDA #COLHIT         STA BORDERDRAWFRM1         ; DOT HIT         LDA #COLNORM         LDX DHIT         BEQ DRAWFRM2         DEX         STX DHIT         BEQ *+4 ; SKIP NEXT         LDA #COLHIT         STA SP0COLDRAWFRM2         RTS;---------------------------------------         ; INIT SCREENINITSCRN         LDA #COLNORM         STA BORDER         LDA #$93 ; ÃÌÒ/ÈÏÍÅ CHAR         JSR CHROUT         RTS;---------------------------------------         ; FILL SLOT Á WITH "BOX"FILSLOTA         LDA #$FF         STA SLOTA+0         STA SLOTA+1         STA SLOTA+2         STA SLOTA+(20*3)+0         STA SLOTA+(20*3)+1         STA SLOTA+(20*3)+2         LDX #(3*21)-3-3DRAW     LDA #$80         STA SLOTA+0,X         LDA #$00         STA SLOTA+1,X         LDA #$01         STA SLOTA+2,X         DEX         DEX         DEX         BNE DRAW         RTS;---------------------------------------         ; FILL SLOT Â WITH "VOID"FILSLOTB         LDA #0         LDX #3*21FILSLOTB1         STA SLOTB,X         DEX         BNE FILSLOTB1         RTS;---------------------------------------         ; SETUP SPRITESSP0SP1         LDA #SLOTA/64         STA SP0SLOT         LDA #SLOTB/64         STA SP1SLOT         LDA #COLNORM         STA SP0COL         STA SP1COL         LDA #3         STA SP9XEX   ; EXPAND X         STA SP9YEX   ; EXPAND Y         STA SP9EN    ; ENABLE         RTS         ; END OF PROGRAM;---------------------------------------